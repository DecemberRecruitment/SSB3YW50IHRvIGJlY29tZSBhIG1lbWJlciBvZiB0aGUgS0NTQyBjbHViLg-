# data = [
#     0xdc, 0x00, 0x00, 0x00, 0x28, 0x00, 0xbd, 0x03, 0x0f, 0x00,
#     0x13, 0x51, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x02, 0x00, 0xb7,
#     0x02, 0x2e, 0x00, 0x29, 0x02, 0x0f, 0x00, 0x6d, 0x30, 0x18,
#     0x33, 0x01, 0xdc, 0x00, 0x04, 0x00, 0xb7, 0x02, 0x0b, 0x00,
#     0x29, 0x02, 0x0f, 0x00, 0x6f, 0x33, 0x18, 0x33, 0x01, 0xdc,
#     0x00, 0x06, 0x00, 0x28, 0x00, 0x69, 0x03, 0x0f, 0x00, 0xc8,
#     0x34, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x08, 0x00, 0xb7, 0x02,
#     0x2b, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x57, 0x00, 0x29, 0x02,
#     0x0f, 0x00, 0x0f, 0x5f, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x0a,
#     0x00, 0xb7, 0x02, 0x61, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x61,
#     0x00, 0x29, 0x02, 0xb7, 0x02, 0x40, 0x00, 0x29, 0x02, 0x0f,
#     0x00, 0x23, 0x68, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x0c, 0x00,
#     0xfb, 0x00, 0x4f, 0x03, 0x0f, 0x00, 0xe5, 0x2d, 0x18, 0x33,
#     0x01, 0xdc, 0x00, 0x0e, 0x00, 0xb7, 0x02, 0x46, 0x00, 0x29,
#     0x02, 0x0f, 0x00, 0x77, 0x33, 0x18, 0x33, 0x01, 0xdc, 0x00,
#     0x10, 0x00, 0xb7, 0x02, 0x1f, 0x00, 0x29, 0x02, 0xb7, 0x02,
#     0x1c, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x26, 0x00, 0x29, 0x02,
#     0x0f, 0x00, 0x4b, 0x39, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x12,
#     0x00, 0xb7, 0x02, 0x0f, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x57,
#     0x00, 0x29, 0x02, 0xb7, 0x02, 0x3f, 0x00, 0x29, 0x02, 0x0f,
#     0x00, 0x54, 0x5f, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x14, 0x00,
#     0xb7, 0x02, 0x37, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x58, 0x00,
#     0x29, 0x02, 0xb7, 0x02, 0x4c, 0x00, 0x29, 0x02, 0x0f, 0x00,
#     0x41, 0x31, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x16, 0x00, 0xb7,
#     0x02, 0x24, 0x00, 0x29, 0x02, 0x0f, 0x00, 0x1d, 0x5f, 0x18,
#     0x33, 0x01, 0xdc, 0x00, 0x18, 0x00, 0xb7, 0x02, 0x1a, 0x00,
#     0x29, 0x02, 0xb7, 0x02, 0x1c, 0x00, 0x29, 0x02, 0x0f, 0x00,
#     0x6e, 0x34, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x1a, 0x00, 0xfb,
#     0x00, 0x80, 0x03, 0x0f, 0x00, 0xee, 0x60, 0x18, 0x33, 0x01,
#     0xdc, 0x00, 0x1c, 0x00, 0xfb, 0x00, 0x09, 0x01, 0x0f, 0x00,
#     0x6a, 0x20, 0x18, 0x33, 0x01, 0x34, 0xce, 0x50
# ]

# byte = bytes(data)
# f = open('tung.bin', 'wb')
# f.write(byte)
# f.close()
# f = open('tung.bin', 'rb')
# byte = f.read(4)
# arr = []
# while byte:
#     tmp = int.from_bytes(byte, 'little')
#     arr.append(tmp)
#     byte = f.read(4)
# for i in range(len(arr)):
#     if i % 10 == 9: print(f'0x{arr[i]:08x}', end = ',\n')
#     else: print(f'0x{arr[i]:08x}', end = ', ')


# v9 = [
#     0x000000dc, 0x03bd0028, 0x5113000f, 0xdc013318, 0xb7000200, 0x29002e02, 0x6d000f02, 0x01331830, 0x000400dc, 0x000b02b7,
#     0x000f0229, 0x3318336f, 0x0600dc01, 0x69002800, 0xc8000f03, 0x01331834, 0x000800dc, 0x002b02b7, 0x02b70229, 0x02290057,
#     0x5f0f000f, 0xdc013318, 0xb7000a00, 0x29006102, 0x6102b702, 0xb7022900, 0x29004002, 0x23000f02, 0x01331868, 0x000c00dc,
#     0x034f00fb, 0x2de5000f, 0xdc013318, 0xb7000e00, 0x29004602, 0x77000f02, 0x01331833, 0x001000dc, 0x001f02b7, 0x02b70229,
#     0x0229001c, 0x002602b7, 0x000f0229, 0x3318394b, 0x1200dc01, 0x0f02b700, 0xb7022900, 0x29005702, 0x3f02b702, 0x0f022900,
#     0x185f5400, 0x00dc0133, 0x02b70014, 0x02290037, 0x005802b7, 0x02b70229, 0x0229004c, 0x3141000f, 0xdc013318, 0xb7001600,
#     0x29002402, 0x1d000f02, 0x0133185f, 0x001800dc, 0x001a02b7, 0x02b70229, 0x0229001c, 0x346e000f, 0xdc013318, 0xfb001a00,
#     0x0f038000, 0x1860ee00, 0x00dc0133, 0x00fb001c, 0x000f0109, 0x3318206a, 0x50ce3401
# ]

# flag = [
#     0x74, 0x75, 0x6E, 0x67, 0x64, 0x65, 0x70, 0x74, 0x72, 0x61, 
#     0x69, 0x63, 0x6F, 0x6D, 0x6F, 0x74, 0x6B, 0x68, 0x6F, 0x6E, 
#     0x67, 0x63, 0x6F, 0x68, 0x61, 0x69
# ]   # tungdeptraicomotkhongcohai

# KMACTF = [
#     0x4B, 0x4D, 0x41, 0x43, 0x54, 0x46
# ]

# map = [] # 004DF784

# for i in range(256): map.append(i)
# v4 = 0
# for i in range(256):
#     v6 = map[i]
#     res = (v4 + v6 + KMACTF[i % len(KMACTF)]) & 0xff
#     v4 = res
#     map[i] = map[res]
#     map[res] = v6

# for i in map: print(f'{i:02x}', end = ' ')


data = [
    0xdc, 0x00, 0x00, 0x00, 0x28, 0x00, 0xbd, 0x03, 0x0f, 0x00,
    0x13, 0x51, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x02, 0x00, 0xb7,
    0x02, 0x2e, 0x00, 0x29, 0x02, 0x0f, 0x00, 0x6d, 0x30, 0x18,
    0x33, 0x01, 0xdc, 0x00, 0x04, 0x00, 0xb7, 0x02, 0x0b, 0x00,
    0x29, 0x02, 0x0f, 0x00, 0x6f, 0x33, 0x18, 0x33, 0x01, 0xdc,
    0x00, 0x06, 0x00, 0x28, 0x00, 0x69, 0x03, 0x0f, 0x00, 0xc8,
    0x34, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x08, 0x00, 0xb7, 0x02,
    0x2b, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x57, 0x00, 0x29, 0x02,
    0x0f, 0x00, 0x0f, 0x5f, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x0a,
    0x00, 0xb7, 0x02, 0x61, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x61,
    0x00, 0x29, 0x02, 0xb7, 0x02, 0x40, 0x00, 0x29, 0x02, 0x0f,
    0x00, 0x23, 0x68, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x0c, 0x00,
    0xfb, 0x00, 0x4f, 0x03, 0x0f, 0x00, 0xe5, 0x2d, 0x18, 0x33,
    0x01, 0xdc, 0x00, 0x0e, 0x00, 0xb7, 0x02, 0x46, 0x00, 0x29,
    0x02, 0x0f, 0x00, 0x77, 0x33, 0x18, 0x33, 0x01, 0xdc, 0x00,
    0x10, 0x00, 0xb7, 0x02, 0x1f, 0x00, 0x29, 0x02, 0xb7, 0x02,
    0x1c, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x26, 0x00, 0x29, 0x02,
    0x0f, 0x00, 0x4b, 0x39, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x12,
    0x00, 0xb7, 0x02, 0x0f, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x57,
    0x00, 0x29, 0x02, 0xb7, 0x02, 0x3f, 0x00, 0x29, 0x02, 0x0f,
    0x00, 0x54, 0x5f, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x14, 0x00,
    0xb7, 0x02, 0x37, 0x00, 0x29, 0x02, 0xb7, 0x02, 0x58, 0x00,
    0x29, 0x02, 0xb7, 0x02, 0x4c, 0x00, 0x29, 0x02, 0x0f, 0x00,
    0x41, 0x31, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x16, 0x00, 0xb7,
    0x02, 0x24, 0x00, 0x29, 0x02, 0x0f, 0x00, 0x1d, 0x5f, 0x18,
    0x33, 0x01, 0xdc, 0x00, 0x18, 0x00, 0xb7, 0x02, 0x1a, 0x00,
    0x29, 0x02, 0xb7, 0x02, 0x1c, 0x00, 0x29, 0x02, 0x0f, 0x00,
    0x6e, 0x34, 0x18, 0x33, 0x01, 0xdc, 0x00, 0x1a, 0x00, 0xfb,
    0x00, 0x80, 0x03, 0x0f, 0x00, 0xee, 0x60, 0x18, 0x33, 0x01,
    0xdc, 0x00, 0x1c, 0x00, 0xfb, 0x00, 0x09, 0x01, 0x0f, 0x00,
    0x6a, 0x20, 0x18, 0x33, 0x01, 0x34, 0xce, 0x50
]




# VMC0d3

# FIND 'LODI' = DATA_X[THIS[4]] IN CIPHER.OJBECT (0xDC)
#   'LODI':
#       THIS[0] = FLAG[I+1]FLAG[I]
#       THIS[4] += CIPHER.LODI          (+= 4) 0x4


# FIND 'ADDI' = DATA_X[THIS[4]] IN CIPHER.OBJECT (0x28)
#   'ADDI':
#       THIS[0] += 0x3BD
#       THIS[4] += CIPHER.ADDI          (+= 4) 0x8


# FIND 'CMPW' = DATA_X[THIS[4]] IN CIPHER.OBJECT (0x0F)
#   'CMPW':
#       CHECK THIS[0] WITH 0x5113
#       THIS[5] NOT CHANGE
#       THIS[4] += 3                    0xF





# FIND 'LODI' = DATA_X[THIS[4]] IN CIPHER.OJBECT (0xDC)
#   'LODI':
#       THIS[0] = FLAG[I+1]FLAG[I]
#       THIS[4] += CIPHER.LODI          (+= 4) 0x13

#   FIND 'MOVI'
#       'MOVI':
#           THIS[2] = 0x2E
#           THIS[4] += CIPHER.MOVI (+= 4)       0x17

#   FIND 'X^':
#       THIS[0] ^= 0x2E
#       THIS[4] += CIPHER.X^ (+= 2)           0x19


#   FIND `CMPW`
#       CHECK THIS[0] WITH 0x306D
#       THIS[4] += CIPHER.X^ (+= 4)
#


# 0x20


# VMC0d3_1s_ch4113n93_b19_h4nds!

# ^ 0x0B = 0X336F
# + 0x369 = 0x34C8
# ^ 0x2B ^ 0X57 = 0X5F0F
# ^ 0X61 ^ 0X61 ^ 0X40 = 0X6823
# - 0X34F = 0X2DE5
# ^ 0X46 = 0X3377
# ^ 0X1F ^ 0X1C ^ 0X26 = 0X394B
# ^ 0X0F ^ 0X57 ^ 0X3F = 0X5F54
# ^ 0X37 ^ 0X58 ^ 0X4C = 0X3141
# ^ 0X24 = 0X5F1D
# ^ 0X1A ^ 0X1C = 0X346E
# - 0X380 = 0X60EE
# - 0X109 = 0X206A




